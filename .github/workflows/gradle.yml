# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write
  pages: write
  id-token: write
  actions: write

env:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"
  CI: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: gradle

    - name: Setup Chrome and ChromeDriver
      uses: browser-actions/setup-chrome@latest
      with:
        chrome-version: 'stable'
    
    - name: Install ChromeDriver
      uses: nanasess/setup-chromedriver@v2

    - name: Setup Chrome and Xvfb
      run: |
        sudo apt-get update
        sudo apt-get install -y xvfb
        Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
        echo "DISPLAY=:99" >> $GITHUB_ENV
        chromedriver --version
        google-chrome --version

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build with Gradle
      run: ./gradlew build

    - name: Run Tests
      run: ./gradlew test

    - name: List Downloaded Files
      run: |
        echo "üìÅ N·ªôi dung th∆∞ m·ª•c downloads sau khi ch·∫°y test:"
        ls -la downloads/
        echo "üìä Th√¥ng tin chi ti·∫øt c√°c file:"
        for file in downloads/*; do
          if [ -f "$file" ]; then
            echo "File: $file"
            echo "Size: $(stat -f%z "$file") bytes"
            echo "Permissions: $(stat -f%p "$file")"
          fi
        done

    - name: Commit Downloaded Files
      run: |
        git config --global user.email "action@github.com"
        git config --global user.name "GitHub Action"
        git add downloads/
        git status
        git commit -m "Update downloads directory with test results [skip ci]"
        git push

    - name: Generate Allure Report
      run: |
        ./gradlew allureReport
        mkdir -p allure-results
        cp -r build/allure-results/* allure-results/

    - name: Upload Allure Report
      uses: actions/upload-artifact@v4
      with:
        name: allure-report
        path: allure-results

    - name: Deploy to GitHub Pages
      if: github.ref == 'refs/heads/main'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./build/reports/allure-report
        publish_branch: gh-pages

  dependency-submission:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: 'gradle'

    - name: Generate and submit dependency graph
      uses: gradle/actions/dependency-submission@v3
